# WIN is used in the usual rwinlib Makevars, but it seems WIN envvar is not
# available when configure.win is used. So, R_ARCH is chosen here.
TARGET = $(subst /x64,x86_64,$(subst /i386,i686,$(R_ARCH)))-pc-windows-gnu

# Use GNU toolchain for R >= 4.2
TOOLCHAIN = stable-gnu

# Rtools42 doesn't have the linker in the location that cargo expects, so we
# need to overwrite it via configuration.
CARGO_LINKER = x86_64-w64-mingw32.static.posix-gcc.exe

CRATE_NAME = fledgingr

LIBDIR = ./rust/target/$(TARGET)/release
PKG_LIBS = -L$(LIBDIR) -l$(CRATE_NAME) -lws2_32 -ladvapi32 -luserenv -lbcrypt
STATLIB = $(LIBDIR)/lib$(CRATE_NAME).a

all: C_clean

$(SHLIB): $(STATLIB)

$(STATLIB):
	echo "$${PATH}" | sed 's/:/\n/g'
	mkdir -p $(LIBDIR)/libgcc_mock
	cd $(LIBDIR)/libgcc_mock && \
		touch gcc_mock.c && \
		gcc -c gcc_mock.c -o gcc_mock.o && \
		ar -r libgcc_eh.a gcc_mock.o && \
		cp libgcc_eh.a libgcc_s.a

	@BEFORE_CARGO_BUILD@ cargo +$(TOOLCHAIN) build --verbose --target=$(TARGET) --lib --release --manifest-path=./rust/Cargo.toml
	@AFTER_CARGO_BUILD@

C_clean:
	rm -Rf $(SHLIB) $(OBJECTS) @CLEAN_EXTRA@

clean:
	rm -Rf $(SHLIB) $(OBJECTS) $(STATLIB) rust/target

.PHONY: all C_clean clean
