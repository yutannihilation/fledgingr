on:
  push:
    branches:
      - main
    tags:
      - 'build*'
  pull_request:
    branches:
      - main

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: "${{ matrix.config.os }} (R: ${{ matrix.config.r }}, Rust: ${{ matrix.config.rust }})"

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release',  rust: 'stable-gnu', rtools-version: '42'}
          - {os: windows-latest, r: 'devel',    rust: 'stable-gnu', rtools-version: '42'}
          - {os: macOS-latest,   r: 'release',  rust: 'stable'     }
          - {os: ubuntu-20.04,   r: 'release',  rust: 'stable'     }
          - {os: ubuntu-20.04,   r: 'devel',    rust: 'stable'     }
          - {os: ubuntu-20.04,   r: 'release',  rust: 'nightly'    }

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      # used in tools/configure_utils.sh
      ABORT_WHEN_NO_CARGO: "true"

    steps:
      - uses: actions/checkout@v3

      - name: Set up Rust (non-Windows)
        uses: dtolnay/rust-toolchain@stable
        if: runner.os != 'Windows'
        with:
          toolchain: ${{ matrix.config.rust }}

      - name: Set up Rust (Windows)
        uses: dtolnay/rust-toolchain@stable
        if: runner.os == 'Windows'
        with:
          toolchain: ${{ matrix.config.rust }}
          target: x86_64-pc-windows-gnu

      - uses: r-lib/actions/setup-r@v2
        id: install-r
        with:
          r-version: ${{ matrix.config.r }}
          rtools-version: ${{ matrix.config.rtools-version }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2

      - name: debug
        run: |
          cat ./check/fledgingr.Rcheck/00install.out
          find ./check -name libfledgingr.a -ls
          find ./check/fledgingr.Rcheck/00_pkg_src/fledgingr/src/rust/target/ -type f -name '*.a' -ls
          find ./check/fledgingr.Rcheck/00_pkg_src/fledgingr/src/rust/target/ -type f -name '*.rlib' -ls

      # Upload prebuilt binaries for Windows
      - name: Tweak staticlib on Windows
        if: runner.os == 'Windows' && matrix.config.r == 'release'
        run: |
          # list all staticlibs
          find ./check -name libfledgingr.a -ls

          mkdir ./staticlib

          mv ./check/fledgingr.Rcheck/00_pkg_src/fledgingr/src/rust/target/x86_64-pc-windows-gnu/debug/libfledgingr.a staticlib/x86_64-pc-windows-gnu-libfledgingr.a

          ls ./staticlib
        shell: pwsh

      # Upload prebuilt binaries for macOS
      - name: Tweak staticlib on macOS
        if: runner.os == 'macOS' && matrix.config.r == 'release'
        run: |
          # list all staticlibs
          find ./check -name libfledgingr.a -ls

          mkdir ./staticlib

          # Intel macOS
          mv ./check/fledgingr.Rcheck/00_pkg_src/fledgingr/src/rust/target/debug/libfledgingr.a staticlib/x86_64-apple-darwin-libfledgingr.a

          # For M1 macOS
          rustup target add aarch64-apple-darwin
          . "${HOME}/.cargo/env" && cargo build --target=aarch64-apple-darwin --lib --release --manifest-path=./check/fledgingr.Rcheck/00_pkg_src/fledgingr/src/rust/Cargo.toml
          mv ./check/fledgingr.Rcheck/00_pkg_src/fledgingr/src/rust/target/aarch64-apple-darwin/debug/libfledgingr.a staticlib/aarch64-apple-darwin-libfledgingr.a

          ls ./staticlib
        shell: pwsh

      - name: Upload staticlib
        uses: actions/upload-artifact@v2
        with:
          name: staticlib
          path: staticlib

  release:
    needs: R-CMD-check
    runs-on: ubuntu-latest
    # Do not run this on pull request
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v2

      - uses: actions/download-artifact@v2

      - name: Checksum
        run: |
          cd staticlib
          sha256sum * > ../sha256sums.txt

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: 'staticlib/*'
          body_path: sha256sums.txt
